'use strict';

var debug = require('debug')('do:Router');
var ware = require('ware');
var util = require('util');
var Route = require('lib/router/route');


function Router() {
  this.routes = [];
  var _this = this;
  ware.call(this);

  this.use(function(req, res, next) {
    var route = _this.find(req.url);

    if (!route) {
      next();
    } else {
      route.run(req, res, function(err) {
        if (err) {
          next(err);
        } else {
          next();
        }
      });

    }
  });
}


util.inherits(Router, ware);


Router.prototype.find = function(url) {
  var route;

  for (var i = 0; i < this.routes.length; i++) {
    if (this.routes[i].match(url)) {
      route = this.routes[i];
      break;
    }
  }

  return route;
};


Router.prototype.add = function(pattern) {
  var handlers = Array.prototype.slice.call(arguments, 1);

  if (!handlers.length) {
    throw new TypeError('Router.add() requires middleware functions');
  }

  this.routes.push(new Route(pattern, handlers));
  debug('add', pattern, handlers, this.routes);
};


module.exports = Router;